{"version":3,"sources":["componentes/AddCategory.js","componentes/GifGridItem.js","helpers/getGifs.js","componentes/GifsGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifsGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8MAOaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAM,OAAGP,GAAH,mBAAiBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBY,SAAAP,GACpBF,EAAcE,EAAEQ,OAAOF,aAwB/BZ,EAAYe,UAAU,CAClBd,cAAee,IAAUC,KAAKC,YAGnBlB,I,QCtCFmB,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAIlC,OAFAC,QAAQC,IAAI,CAACJ,KAAGC,QAAMC,QAGlB,sBAAKG,UAAU,yCAAf,UACK,4BAAIJ,IACL,qBAAKK,IAAKJ,EAAKK,IAAKN,Q,uBCTnBO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbR,EAFa,iDAEmCS,UAAUF,GAF7C,+DAGAG,MAAMV,GAHN,cAGbW,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAKgB,EAAIC,OAAOC,iBAAiBlB,QATtB,kBAYZc,GAZY,4CAAH,sDCIPK,EAAW,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAGvB,ECJwB,SAACA,GAEzB,MAA0B3B,mBAAS,CAC/BiC,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GAEEH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAK1B,CAACb,IAGGc,EDlBuBK,CAAanB,GAA/BU,EAAZ,EAAOJ,KAAYO,EAAnB,EAAmBA,QAInB,OACI,qCACA,6BAAKb,IAEJa,GAAW,mBAAGjB,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGYc,EAAOF,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIlB,aEQjB6B,EAzBM,WAEjB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAMA,OACI,gCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQiD,EAAWb,KAAI,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,YChBtCsB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b73a3b83.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange=e=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n      \r\n        if (inputValue.trim().length>2){\r\n            setCategories(catego=>[inputValue,...catego])\r\n            setInputValue('') \r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log({id,title,url})\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n             <p>{title}</p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=Mu1a9ZbWA6wY7SpVYgJgH3UayZx1J12O`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return(gifs)\r\n}","import { GifGridItem } from './GifGridItem'\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifsGrid = ({ category }) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category)\r\n\r\n \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n        <div className='card-grid'>\r\n            \r\n               {\r\n                    images.map(img =>(\r\n                       <GifGridItem \r\n                       key={img.id}\r\n                       {...img}/>\r\n                    ))\r\n\r\n                    \r\n               }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n              \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n               \r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","\r\nimport React, { useState } from \"react\"\r\nimport { AddCategory } from \"./componentes/AddCategory\"\r\nimport { GifsGrid } from \"./componentes/GifsGrid\"\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['overwatch'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories,'hunter x hunter'])\r\n    // setCategories(catego=>[...catego,inputValue])}\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                       <GifsGrid key={category} category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}